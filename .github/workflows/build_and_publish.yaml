name: Build and Release Go Assets

on:
  release:
    types: [created]

jobs:
  build-and-upload:
    name: Build and Upload Release Assets
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to upload assets to the release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          go mod tidy
          go get github.com/fatih/color
          go get github.com/olekukonko/tablewriter
          go get github.com/briandowns/spinner

      - name: Build all platform binaries
        run: |
          # Create directories for builds
          mkdir -p build/{darwin,linux,windows}/{amd64,arm64}

          # Build for macOS (darwin)
          GOOS=darwin GOARCH=amd64 go build -o build/darwin/amd64/dir-remover
          GOOS=darwin GOARCH=arm64 go build -o build/darwin/arm64/dir-remover

          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -o build/linux/amd64/dir-remover
          GOOS=linux GOARCH=arm64 go build -o build/linux/arm64/dir-remover

          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -o build/windows/amd64/dir-remover.exe
          GOOS=windows GOARCH=arm64 go build -o build/windows/arm64/dir-remover.exe

          # Debug - check what files were created
          echo "Files in build directory:"
          find build -type f

          # Create a directory for renamed release assets
          mkdir -p release-assets

          # Copy and rename binaries for release
          # Darwin (macOS) binaries
          cp build/darwin/arm64/dir-remover release-assets/dir-remover-arm64-${{ steps.get_release.outputs.tag_name }}-macos
          cp build/darwin/amd64/dir-remover release-assets/dir-remover-amd64-${{ steps.get_release.outputs.tag_name }}-macos

          # Linux binaries
          cp build/linux/arm64/dir-remover release-assets/dir-remover-arm64-${{ steps.get_release.outputs.tag_name }}-linux
          cp build/linux/amd64/dir-remover release-assets/dir-remover-amd64-${{ steps.get_release.outputs.tag_name }}-linux

          # Windows binaries
          cp build/windows/arm64/dir-remover.exe release-assets/dir-remover-arm64-${{ steps.get_release.outputs.tag_name }}-windows.exe
          cp build/windows/amd64/dir-remover.exe release-assets/dir-remover-amd64-${{ steps.get_release.outputs.tag_name }}-windows.exe

          # Create compressed archives for each platform
          cd build/darwin/arm64 && tar -czf ../../../release-assets/dir-remover-arm64-${{ steps.get_release.outputs.tag_name }}-macos.tar.gz dir-remover && cd -
          cd build/darwin/amd64 && tar -czf ../../../release-assets/dir-remover-amd64-${{ steps.get_release.outputs.tag_name }}-macos.tar.gz dir-remover && cd -

          cd build/linux/arm64 && tar -czf ../../../release-assets/dir-remover-arm64-${{ steps.get_release.outputs.tag_name }}-linux.tar.gz dir-remover && cd -
          cd build/linux/amd64 && tar -czf ../../../release-assets/dir-remover-amd64-${{ steps.get_release.outputs.tag_name }}-linux.tar.gz dir-remover && cd -

          cd build/windows/arm64 && zip -r ../../../release-assets/dir-remover-arm64-${{ steps.get_release.outputs.tag_name }}-windows.zip dir-remover.exe && cd -
          cd build/windows/amd64 && zip -r ../../../release-assets/dir-remover-amd64-${{ steps.get_release.outputs.tag_name }}-windows.zip dir-remover.exe && cd -

          # List what we found to upload
          echo "Files ready to upload:"
          ls -la release-assets/

      - name: Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
